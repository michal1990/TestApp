apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild.ndkBuild.path 'src/main/jni/Android.mk'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(':model')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    api "org.koin:koin-android:$koin_version"

    testImplementation "junit:junit:$junit_version"

    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"
    androidTestImplementation "org.koin:koin-test:$koin_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation("io.kotlintest:kotlintest:$kotlin_kotlintest_version") {
        exclude group: 'com.google.guava'
    }
}
